name: Build

on:
  release:
    types:
      - created
  workflow_dispatch:
    inputs:
      debug_enabled:
        description: 'Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)'     
        required: false
        default: false

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.7"
      # Allow debugging with tmate
#       - name: Setup tmate session
#         uses: mxschmitt/action-tmate@v3
#         if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.debug_enabled }}
#         with:
#           limit-access-to-actor: false
      - uses: actions/cache@v2
        id: cache
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ runner.os }}-python-${{ env.pythonLocation }}-${{ hashFiles('pyproject.toml') }}-root
      - name: Install poetry
        if: steps.cache.outputs.cache-hit != 'true'
        # TODO: remove python -m pip install --force git+https://github.com/python-poetry/poetry-core.git@ad33bc2
        # once there's a release of Poetry 1.2.x including poetry-core > 1.1.0a6
        # Ref: https://github.com/python-poetry/poetry-core/pull/188
        run: |
          python -m pip install --upgrade pip
          python -m pip install --force git+https://github.com/python-poetry/poetry-core.git@ad33bc2
          python -m pip install "poetry==1.2.0a2"
          python -m poetry plugin add poetry-version-plugin
      - name: Configure poetry
        run: python -m poetry config virtualenvs.create false
      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: python -m poetry install
      - name: Build Distribution
        env:
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        run: python -m poetry build
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.debug_enabled }}
        with:
          limit-access-to-actor: false
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: Add packaged distribution
          committer: Ben Yang <benny@no-reply.com>
          body: |
            New distribution built.
            - Contains *today's* date
            - Auto-generated by [create-pull-request][1]

            [1]: https://github.com/peter-evans/create-pull-request
          title: "[GH Actions] Built new distribution package"
          assignees: suimong
          reviewers: suimong
          branch: gh-workflows-build
